stages:
  - test
  - deploy

services:
  - postgres:latest
  - dcshock/docker-mumble-server:latest

variables:
  POSTGRES_DB: bot-test
  POSTGRES_USER: runner
  POSTGRES_PASSWORD: ""
  POSTGRES_HOST: "postgres"
  MUMBLE_URL: dcshock-docker-mumble-server

image: "node:9-stretch"
before_script:
  - apt-get -qq update
  - apt-get -qq install -y build-essential

integration-test:
  before_script:
    - apt-get -qq update
    - apt-get -qq install -y gconf-service libasound2 libgconf-2-4 libgtk-3-0 libnspr4 libx11-xcb1
      libxss1 libxtst6 fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst ttf-freefont
      fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils libpango1.0-dev libgif-dev build-essential
  script:
    - make integration-test
  stage: test
  artifacts:
    when: always
    paths:
      - jest-screenshot-report/

test:
  script:
    - make test
  stage: test
  artifacts:
    when: always
    paths:
      - coverage/

build:
  script:
    - make release
  stage: test
  artifacts:
    paths:
      - dist/
      - server/
      - src/
      - package.json
      - yarn.lock
      - scripts/
      - schema.sql
      - CHANGELOG.md
      - typings/
      - README.md

lint:
  script:
    - make lint
  stage: test

deploy:
  image: "alpine:3.5"
  before_script:
    - apk --update add ansible git openssh python py2-pip
    - mkdir ~/.ssh
    - echo "$SSH_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  script:
    - cd deploy
    - ansible-playbook mumble-bot.yml --extra-vars "database_password='$DATABASE_PASSWORD' bot_key='$BOT_KEY'"
  dependencies:
    - build
  stage: deploy
  when: manual
  only:
    - master
