<style>

.fileWrapper {
	width: 100%;
	margin: auto;
	position: relative;
	background-color: rgba(179, 179, 179, 0.2);
	color: rgb(179, 179, 179);
	border: 4px dashed rgb(179, 179, 179);
	border-radius: 4px;
	overflow: hidden;
	height: 200px;
	text-align: center;
	padding-top: 70px;
}

.fileWrapper span{
	font-size: 15pt;
	margin: auto;
}

.fileWrapper input{
	position: absolute;
	top: 0;
	left: 0;
	margin: 0;
	padding: 0;
	cursor: pointer;
	opacity: .0;
	height: 200px;
	width: inherit;
}

</style>
<h1>Upload</h1>
<p>Hier können neue Songs hochgeladen werden.</p>

<form action="upload.php" method="post" enctype="multipart/form-data">
	<h1>Datei auswählen</h1>
	<div class="fileWrapper">
		<span>Dateien hierhin ziehen</span><br />
		<span style="font-size: 12pt;">(Oder klicken und auswählen)</span>
		<input type="file" name="upload[]" multiple="multiple"/>
	</div>
</form>
<div id="progress_wrapper">
	<h2>Dateien</h2>
	<table class="table table-striped">
		<thead>
			<tr>
				<th>Dateiname</th>
				<th>Status</th>
			</tr>
		</thead>
		<tbody id="filelist">
		</tbody>
	</table>
	<h2>Fortschritt</h2>
	<div id="progressbar_wrapper">
	</div>
</div>
<script>
$("#progress_wrapper").hide();
$(":file").change(function() {
	$("#progress_wrapper").show();
	$("form").hide();
	var formdata = new FormData($("form")[0]);

	var files = [];
	$("#progressbar_wrapper").html("");
	for(var i = 0; i < this.files.length; i++) {
		var file = this.files[i];
		var name = file.name;
		var row = $('<tr><td>' + name + '</td></tr>').append().appendTo("#filelist");
		var symbol = $('<td><span class="glyphicon glyphicon-upload" aria-hidden="true"></span></td>');
		symbol.appendTo(row);
		files[name] = {
			symbol: symbol,
			row : row
		};

	}

	var progress = {};
	progress.outer = $('<div class="progress"></div>').appendTo("#progressbar_wrapper");
	progress.inner = $('<div class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100">').appendTo(progress.outer);

	function updateProgress(e) {
		if(e.lengthComputable) {
			var percent = parseInt((e.loaded/e.total)*100) +"%";
			progress.inner.css({"width" : percent});
		}
	}

	$.ajax({
		url : "/api/music/upload",
		type : "POST",
		xhr : function() {
			var xhr = $.ajaxSettings.xhr();
			if(xhr.upload) {
				xhr.upload.addEventListener("progress", updateProgress, false);
			}
			return xhr;
		},
		cache : false,
		data: formdata,
		processData: false,
		contentType : false,
		success : function(data) {
			if(data.okay) {
				for(var key in data) {
					var file = data[key];
					var elem = files[key];
					elem.symbol.remove();
					if(file.okay) {
						elem.symbol = $('<td><span class="glyphicon glyphicon-ok" aria-hidden="true"></span></td>').appendTo(elem.row);
					}
					else {
						elem.symbol = $('<td><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></td>').appendTo(elem.row);
					}
				}
				$("form").show();
			}
			else {
				spawnNotification('error', "Sie verfügen nicht über die nötige Berechtigung, Musik hochzuladen.");
			}
		}
	});
});
</script>
